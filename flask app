from flask import Flask, request, jsonify
import base64

app = Flask(__name__)

# GET Method
@app.route('/bfhl', methods=['GET'])
def get_operation_code():
    response = {
        "operation_code": 1
    }
    return jsonify(response), 200

# POST Method
@app.route('/bfhl', methods=['POST'])
def post_data():
    try:
        data = request.json.get("data")
        file_b64 = request.json.get("file_b64", "")
        
        # User information (hardcoded for now)
        user_id = "john_doe_17091999"  # Replace with actual logic
        email = "john@xyz.com"
        roll_number = "ABCD123"
        
        # Separate numbers and alphabets from the input
        numbers = [x for x in data if x.isdigit()]
        alphabets = [x for x in data if x.isalpha()]
        
        # Find highest lowercase alphabet
        lowercase_alphabets = [x for x in alphabets if x.islower()]
        highest_lowercase_alphabet = max(lowercase_alphabets, default=None)

        # File validation
        file_valid = False
        file_mime_type = None
        file_size_kb = None

        if file_b64:
            try:
                decoded_file = base64.b64decode(file_b64)
                file_size_kb = len(decoded_file) / 1024  # File size in KB
                file_mime_type = "application/octet-stream"  # Default MIME
                file_valid = True
            except Exception:
                file_valid = False

        # Build the response
        response = {
            "is_success": True,
            "user_id": user_id,
            "email": email,
            "roll_number": roll_number,
            "numbers": numbers,
            "alphabets": alphabets,
            "highest_lowercase_alphabet": [highest_lowercase_alphabet] if highest_lowercase_alphabet else [],
            "file_valid": file_valid,
            "file_mime_type": file_mime_type,
            "file_size_kb": file_size_kb
        }

        return jsonify(response), 200

    except Exception as e:
        return jsonify({"is_success": False, "error": str(e)}), 400


if __name__ == '__main__':
    app.run(debug=True)
